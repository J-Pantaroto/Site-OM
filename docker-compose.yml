
services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    image: laravel-app
    container_name: laravel-app
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./entrypoint.sh:/entrypoint.sh
    entrypoint: ["sh", "/entrypoint.sh"]
    networks:
      - laravel
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 10s
      retries: 5

  scheduler:
    image: laravel-app
    container_name: laravel-scheduler
    depends_on:
      - mysql
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    command: php artisan schedule:work
    networks:
      - laravel

  queue:
    image: laravel-app
    container_name: laravel-queue
    depends_on:
      - mysql
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    command: php artisan queue:listen --verbose --tries=3 --timeout=60
    networks:
      - laravel

  mysql:
    image: mysql:8.0
    container_name: laravel-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      retries: 10
      timeout: 5s

  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel
    

  node:
    image: node:20
    container_name: laravel-node
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    command: sh -c "npm install && npm run dev"
    networks:
      - laravel

volumes:
  dbdata:

networks:
  laravel:
